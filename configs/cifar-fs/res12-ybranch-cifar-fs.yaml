name: res12featcluster-minibatch-sideout-classifier-ybranch-cifar-fs-TFF-FFF-TTT-FFF-self-uv_dist-att-FFF-FFF-TTT-FFF-out_conv-stage2-firstTconcat-train7shot-test_stop-cos-sine_pe-pre_normF-init_rp-param_reduced
train_dataset: cifar-fs
train_dataset_args: {split: train, aug: lee}
# val_dataset: cifar-fs
# val_dataset_args: {split: train_phase_val, aug: lee}
val_dataset: cifar-fs
val_dataset_args: {split: test, aug: lee}

fs_dataset_train: cifar-fs
fs_dataset_train_args: {split: train, aug: lee}
fs_dataset_val: cifar-fs
fs_dataset_val_args: {split: test, aug: lee}

model: classifier-sideout-class-meta
model_args:
    encoder: resnet12-featcluster-minibatch-sideout-classifier-ybranch-param-reduced
    encoder_args:  {
        stem_use_feat_cluster_list: [[{use_feat_cluster: true, feat_cluster_type: 'out_conv', sideout_classifier: false}, false, false], [false, false, false]],
        branch1_use_feat_cluster_list: [[true, true, true], [false, false, false]],
        branch2_use_feat_cluster_list: [[false, false, false], [false, false, false]],
        stem_use_self_attention_list: [[false, false, false],[false,false,false]],
        branch1_use_self_attention_list: [[true, true, true], [false, false, false]],
        branch2_use_self_attention_list: [[false, false, false], [false, false, false]],
        self_attention_kwargs: {
           head: 8,
           positional_encoding: 'sine',
           attention_loc: 'uv_dist',
           pre_normalize: false,
           },
        feat_cluster_kwargs: {
            max_type: 'softmax', 
            cluster_type: 'dynamic-routing', 
            iterations: 1, 
            init_type: 'rp',
            K: 100.0, 
            num_clusters: 64,
            detach_coeff: true,
            eps: 0.01,
            fix_init: true,
            channels: 64, 
            normalize_input: true, 
            normalize_init: true, 
            show_cur_iter: false, 
            alpha: 1.0, 
            minibatch: 'sculley-like',
            V_count_init: 1.0,
            detach_uv_dist: false,
        },
        feat_cluster_type: 'out_conv', # can be 'input3x3', 'input', 'out_conv', 'out_conv_identity', 'out_conv_another3x3conv'
        out_feat_flatten: true,
        avgpool: true,
        sideout_classifier: false,
        y_branch_stage: 2
    }
    classifier: linear-classifier 
    classifier_args: {n_classes: 64}
    sideout_info: [['branch1.0.mergeblock1.featcluster.avgpool', 64], ['branch1.0.mergeblock2.featcluster.avgpool', 64], ['branch1.0.mergeblock3.featcluster.avgpool', 64]]
    method: 'cos'
    temp: 10.0
    
train_branch_1: True
train_branch_2: True
eval_val: True
eval_fs: True

# classification hyperparameters
batch_size: 128
max_epoch: 60

# few-shot hyperparameters
n_way: 5
n_shot: 1
n_train_shot: 7
n_query: 6
train_batches: 1000
ep_per_batch: 8

opt: lee
save_epoch: 5